package gui;

import File.Functions;
import core.AddressFactory;
import core.Client;
import core.PathStore;
import java.io.IOException;
import java.security.NoSuchAlgorithmException;
import java.util.HashSet;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Uday Kandpal
 */
public class MailBox extends javax.swing.JFrame {

    static Client c;

    /**
     * Creates new form ClientXImpl
     */
    public MailBox() {

        initComponents();
        setVisible(true);
        System.out.println("Connecting to port " + 3333);

        boolean b = false;
        Set<String> done = new HashSet();
        while (true) {
            for (String z : AddressFactory.getAddresses()) {
                if (!done.contains(z)) {
                    try {
                        System.out.println(z);
                        c = new Client(AddressFactory.toIPAddress(z), 3333);
                        String x = c.receive();
                        System.out.println("received : " + x);
                        String f = c.receive();
                        c.send("start");
                        c.flushSent();
                        c.receiveFile(f,false);
                        c.send("BYE");
                        c.flushSent();
                        Functions.File_Input(Functions.File_Output("downloads/" + f), PathStore.INBOX + "/" + f, null);
                        Functions.deleteFile("downloads/" + f);
                        done.add(z);
                    } catch (IOException ex) {
                    } catch (NoSuchAlgorithmException ex) {
                        Logger.getLogger(MailBox.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
                if (done.size() == 5) {
                    int i = 0;
                    for (String s : done) {
                        done.remove(s);
                        if (i == done.size() - 1 || i == done.size()) {
                            break;
                        }
                    }
                }
            }
        }
    }

    public MailBox(boolean tr) {
        initComponents();
        setVisible(tr);
        for (String x : AddressFactory.getAddresses()) {
            System.out.println("trying : " + x);
            try {
                c = new Client(AddressFactory.toIPAddress(x), 3333);
                String f = c.receive();
                System.out.println("received : " + x);
                JOptionPane.showMessageDialog(rootPane, x);
                c.receiveFile(f,false);
                JOptionPane.showMessageDialog(rootPane, "E-mail received successfully");
                c.send("BYE");
                c.flushSent();
            } catch (IOException ex) {
                // Logger.getLogger(MailBox.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NoSuchAlgorithmException ex) {
                Logger.getLogger(MailBox.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("My MailBox");

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setForeground(new java.awt.Color(0, 0, 153));
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("Mailbox has started and is listening to Mails received at port Number 3333 (TCP/IP)");
        jTextArea1.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MailBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MailBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MailBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MailBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MailBox().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
